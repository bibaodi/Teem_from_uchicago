
/* NOTE: This file is a *very* hacked up version of the original
teem/biff.h, generated by build_teem.py to declare the biff API to
CFFI, within its many limitations, specifically lacking a C pre-processor
(so no #include directives, and only certain #defines). */
 /* =========== biff.h =========== */
/*
  Teem: Tools to process and visualize scientific data and images
  Copyright (C) 2009--2023  University of Chicago
  Copyright (C) 2005--2008  Gordon Kindlmann
  Copyright (C) 1998--2004  University of Utah
  This library is free software; you can redistribute it and/or modify it under the terms
  of the GNU Lesser General Public License (LGPL) as published by the Free Software
  Foundation; either version 2.1 of the License, or (at your option) any later version.
  The terms of redistributing and/or modifying this software also include exceptions to
  the LGPL that facilitate static linking.
  This library is distributed in the hope that it will be useful, but WITHOUT ANY
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License along with
  this library; if not, write to Free Software Foundation, Inc., 51 Franklin Street,
  Fifth Floor, Boston, MA 02110-1301 USA
*/
/* ---- BEGIN non-NrrdIO */
/* ---- END non-NrrdIO */
/*
** biffMsg struct
**
** externally usable thing for holding error messages
*/
typedef struct {
  char *key;           /* string for identifying the general source
                          of the error message; set once, at time
                          of biffMsg creation */
  char **err;          /* array of error strings; the err array itself
                          is NOT null-terminated */
  unsigned int errNum; /* length of "err" == # strings stored */
  airArray *errArr;    /* air array for err and num */
} biffMsg;
/* biffbiff.c */
/* ---- BEGIN non-NrrdIO */
extern const int biffPresent;
/* ---- END non-NrrdIO */
extern void biffAdd(const char *key, const char *err);
extern void biffAddf(const char *key, const char *errfmt, ...)
  ;
extern void biffMaybeAdd(const char *key, const char *err, int useBiff);
extern void biffMaybeAddf(int useBiff, const char *key, const char *errfmt, ...)
  ;
extern char *biffGet(const char *key);
extern unsigned int biffGetStrlen(const char *key);
extern void biffSetStr(char *str, const char *key);
/* ---- BEGIN non-NrrdIO */
extern unsigned int biffCheck(const char *key);
extern void biffMove(const char *destKey, const char *err, const char *srcKey);
extern void biffMovef(const char *destKey, const char *srcKey, const char *errfmt,
                           ...)
  ;
extern void biffSetStrDone(char *str, const char *key);
/* ---- END non-NrrdIO */
extern void biffDone(const char *key);
extern char *biffGetDone(const char *key);
